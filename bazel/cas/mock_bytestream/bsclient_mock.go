// Automatically generated by MockGen. DO NOT EDIT!
// Source: google.golang.org/genproto/googleapis/bytestream (interfaces: ByteStreamClient,ByteStream_ReadClient,ByteStream_WriteClient)

package mock_bytestream

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	bytestream "google.golang.org/genproto/googleapis/bytestream"
	grpc "google.golang.org/grpc"
	metadata "google.golang.org/grpc/metadata"
)

// Mock of ByteStreamClient interface
type MockByteStreamClient struct {
	ctrl     *gomock.Controller
	recorder *_MockByteStreamClientRecorder
}

// Recorder for MockByteStreamClient (not exported)
type _MockByteStreamClientRecorder struct {
	mock *MockByteStreamClient
}

func NewMockByteStreamClient(ctrl *gomock.Controller) *MockByteStreamClient {
	mock := &MockByteStreamClient{ctrl: ctrl}
	mock.recorder = &_MockByteStreamClientRecorder{mock}
	return mock
}

func (_m *MockByteStreamClient) EXPECT() *_MockByteStreamClientRecorder {
	return _m.recorder
}

func (_m *MockByteStreamClient) QueryWriteStatus(_param0 context.Context, _param1 *bytestream.QueryWriteStatusRequest, _param2 ...grpc.CallOption) (*bytestream.QueryWriteStatusResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "QueryWriteStatus", _s...)
	ret0, _ := ret[0].(*bytestream.QueryWriteStatusResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStreamClientRecorder) QueryWriteStatus(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "QueryWriteStatus", _s...)
}

func (_m *MockByteStreamClient) Read(_param0 context.Context, _param1 *bytestream.ReadRequest, _param2 ...grpc.CallOption) (bytestream.ByteStream_ReadClient, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Read", _s...)
	ret0, _ := ret[0].(bytestream.ByteStream_ReadClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStreamClientRecorder) Read(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Read", _s...)
}

func (_m *MockByteStreamClient) Write(_param0 context.Context, _param1 ...grpc.CallOption) (bytestream.ByteStream_WriteClient, error) {
	_s := []interface{}{_param0}
	for _, _x := range _param1 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "Write", _s...)
	ret0, _ := ret[0].(bytestream.ByteStream_WriteClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStreamClientRecorder) Write(arg0 interface{}, arg1 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0}, arg1...)
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Write", _s...)
}

// Mock of ByteStream_ReadClient interface
type MockByteStream_ReadClient struct {
	ctrl     *gomock.Controller
	recorder *_MockByteStream_ReadClientRecorder
}

// Recorder for MockByteStream_ReadClient (not exported)
type _MockByteStream_ReadClientRecorder struct {
	mock *MockByteStream_ReadClient
}

func NewMockByteStream_ReadClient(ctrl *gomock.Controller) *MockByteStream_ReadClient {
	mock := &MockByteStream_ReadClient{ctrl: ctrl}
	mock.recorder = &_MockByteStream_ReadClientRecorder{mock}
	return mock
}

func (_m *MockByteStream_ReadClient) EXPECT() *_MockByteStream_ReadClientRecorder {
	return _m.recorder
}

func (_m *MockByteStream_ReadClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_ReadClientRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

func (_m *MockByteStream_ReadClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockByteStream_ReadClientRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockByteStream_ReadClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStream_ReadClientRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockByteStream_ReadClient) Recv() (*bytestream.ReadResponse, error) {
	ret := _m.ctrl.Call(_m, "Recv")
	ret0, _ := ret[0].(*bytestream.ReadResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStream_ReadClientRecorder) Recv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Recv")
}

func (_m *MockByteStream_ReadClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_ReadClientRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockByteStream_ReadClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_ReadClientRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockByteStream_ReadClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

func (_mr *_MockByteStream_ReadClientRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}

// Mock of ByteStream_WriteClient interface
type MockByteStream_WriteClient struct {
	ctrl     *gomock.Controller
	recorder *_MockByteStream_WriteClientRecorder
}

// Recorder for MockByteStream_WriteClient (not exported)
type _MockByteStream_WriteClientRecorder struct {
	mock *MockByteStream_WriteClient
}

func NewMockByteStream_WriteClient(ctrl *gomock.Controller) *MockByteStream_WriteClient {
	mock := &MockByteStream_WriteClient{ctrl: ctrl}
	mock.recorder = &_MockByteStream_WriteClientRecorder{mock}
	return mock
}

func (_m *MockByteStream_WriteClient) EXPECT() *_MockByteStream_WriteClientRecorder {
	return _m.recorder
}

func (_m *MockByteStream_WriteClient) CloseAndRecv() (*bytestream.WriteResponse, error) {
	ret := _m.ctrl.Call(_m, "CloseAndRecv")
	ret0, _ := ret[0].(*bytestream.WriteResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStream_WriteClientRecorder) CloseAndRecv() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseAndRecv")
}

func (_m *MockByteStream_WriteClient) CloseSend() error {
	ret := _m.ctrl.Call(_m, "CloseSend")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) CloseSend() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CloseSend")
}

func (_m *MockByteStream_WriteClient) Context() context.Context {
	ret := _m.ctrl.Call(_m, "Context")
	ret0, _ := ret[0].(context.Context)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) Context() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Context")
}

func (_m *MockByteStream_WriteClient) Header() (metadata.MD, error) {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(metadata.MD)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockByteStream_WriteClientRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockByteStream_WriteClient) RecvMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "RecvMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) RecvMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RecvMsg", arg0)
}

func (_m *MockByteStream_WriteClient) Send(_param0 *bytestream.WriteRequest) error {
	ret := _m.ctrl.Call(_m, "Send", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) Send(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0)
}

func (_m *MockByteStream_WriteClient) SendMsg(_param0 interface{}) error {
	ret := _m.ctrl.Call(_m, "SendMsg", _param0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) SendMsg(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SendMsg", arg0)
}

func (_m *MockByteStream_WriteClient) Trailer() metadata.MD {
	ret := _m.ctrl.Call(_m, "Trailer")
	ret0, _ := ret[0].(metadata.MD)
	return ret0
}

func (_mr *_MockByteStream_WriteClientRecorder) Trailer() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Trailer")
}
